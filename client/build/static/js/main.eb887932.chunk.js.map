{"version":3,"sources":["components/Dash.js","components/Form.js","components/Display.js","App.js","serviceWorker.js","index.js"],"names":["Dash","useState","piratelist","setPirateList","count","setCount","useEffect","axios","get","then","response","pList","data","results","sort","a","b","name","localeCompare","catch","err","console","log","className","to","map","mate","i","key","src","url","alt","_id","onClick","e","num","window","confirm","delete","Form","chests","phrase","position","pirate","setPirate","errors","setErrors","handleChange","target","value","validate","valid","curErr","length","onSubmit","preventDefault","post","message","navigate","htmlFor","type","onChange","Display","props","id","leg","eye","hand","App","path","default","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.eb887932.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport {Link} from '@reach/router'\n\nconst Dash = () => {\n\n    const [piratelist, setPirateList] = useState([]);\n    const [count, setCount] = useState(0)\n\n    useEffect(() => {\n        axios.get('http://localhost:8000/api/pirates')\n            .then(response =>{\n                let pList = response.data.results;\n                pList.sort((a, b) => (a.name.localeCompare(b.name)))\n                setPirateList(pList)\n            })\n            .catch(err => console.log(err))\n    }, [count])\n\n    const handleClick = (e, num) =>{\n        if(window.confirm(\"Are you sure?\")){\n            axios.delete(`http://localhost:8000/api/pirates/${num}`)\n                .then(response=>{\n                    setCount(count + 1)\n                })\n        }\n    }\n\n    return (\n        <div className=\"container\">\n            <header className=\"text-center\">\n                <h1>Pirate Crew     <Link to='/pirates/new'>Add Pirate</Link></h1>\n            </header>\n            <div>\n                {\n                    piratelist.map((mate, i) => \n                        <div key={i} className=\"dashBox\">\n                            <img src={mate.url} alt=\" fakek url\"/>\n                            <div className=\"textBox text-center\">\n                                <h3>{mate.name}</h3>\n                                <button><Link to={`/pirate/${mate._id}`}>View Pirate</Link></button>\n                                <button onClick={ (e) => handleClick(e, mate._id)}> Walk the Plank</button>\n                            </div>\n                        </div>\n                    )\n                }\n            </div>\n\n\n        </div>\n    )\n}\n\nexport default Dash\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {navigate, Link} from '@reach/router'\n\nconst Form = () => {\n\n    const [pirate, setPirate] = useState({\n        name: \"\",\n        url: \"\",\n        chests: 0,\n        phrase: \"\",\n        position: \"\"\n    })\n    const [errors, setErrors] = useState({\n        name: \"\",\n        url: \"\",\n        chests: 0,\n        phrase: \"\",\n        position: \"\"\n    })\n\n    const handleChange = e =>{\n        const mate = {\n            ...pirate,\n            [e.target.name] : e.target.value\n        }\n        validate(mate)\n        setPirate(mate)\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        if(validate(pirate)){\n            axios.post('http://localhost:8000/api/pirates', pirate)\n                .then(response =>{\n                    console.log(response)\n                    if(response.data.message === \"success\"){\n                        navigate(`/pirate/${response.data.results._id}`)\n                    }\n                })\n                .catch(err => console.log(err))\n        }\n    }\n\n    const validate = mate => {\n        let valid = true;\n        const {...curErr} = errors;\n        if(mate.name.length === 0){\n            curErr.name = \"This field is required\"\n            valid = false\n        }else{\n            curErr.name = \"\"\n        }\n\n        if(mate.url.length === 0){\n            curErr.url = \"This field is required\"\n            valid = false\n        } else{\n            curErr.url = \"\"\n        }\n\n        if(mate.phrase.length === 0){\n            curErr.phrase = \"This field is required\"\n            valid = false\n        } else{\n            curErr.phrase = \"\"\n        }\n\n        if(mate.position.length === 0){\n            curErr.position = \"This field is required\"\n            valid = false\n        } else{\n            curErr.position = \"\"\n        }\n\n        if(mate.chests.length === 0){\n            curErr.chests = \"This field is required.\"\n        } else{\n            curErr.chests = \"\"\n        }\n\n        setErrors(curErr);\n        return valid;\n    }\n    \n\n    return (\n        <div className=\"container\">\n            <header className=\"text-center\">\n                <h1>Add Pirate    <Link to='/pirates'>Crew board</Link></h1>\n            </header>\n\n            <form onSubmit={handleSubmit} className=\"col-sm-12\">\n                <div className=\"form-group row\">\n                    {\n                        errors.name ? \n                        <p className=\"col-sm-8 offset-sm-4 text-danger\">{ errors.name }</p>\n                        :\n                        ''\n                    }\n                    <label htmlFor=\"name\" className=\"col-sm-4\">Name:</label>\n                    <input type=\"text\" name=\"name\" value={pirate.name} onChange={handleChange} className=\"col-sm-8 form-control\"/>\n                </div>\n                <div className=\"form-group row\">\n                    {\n                        errors.url ? \n                        <p className=\"col-sm-8 offset-sm-4 text-danger\">{ errors.url }</p>\n                        :\n                        ''\n                    }\n                    <label htmlFor=\"url\" className=\"col-sm-4\">Image URL:</label>\n                    <input type=\"text\" name=\"url\" value={pirate.url} onChange={handleChange} className=\"col-sm-8 form-control\"/>\n                </div>\n                <div className=\"form-group row\">\n                    {\n                        errors.chests ? \n                        <p className=\"col-sm-8 offset-sm-4 text-danger\">{ errors.chests }</p>\n                        :\n                        ''\n                    }\n                    <label htmlFor=\"chests\" className=\"col-sm-4\"># of Treasure Chests:</label>\n                    <input type=\"number\" name=\"chests\" value={pirate.chests} onChange={handleChange} className=\"col-sm-8 form-control\"/>\n                </div>\n                <div className=\"form-group row\">\n                    {\n                        errors.phrase ? \n                        <p className=\"col-sm-8 offset-sm-4 text-danger\">{ errors.phrase }</p>\n                        :\n                        ''\n                    }\n                    <label htmlFor=\"phrase\" className=\"col-sm-4\">Pirate catch phrase:</label>\n                    <input type=\"text\" name=\"phrase\" value={pirate.phrase} onChange={handleChange} className=\"col-sm-8 form-control\"/>\n                </div>\n                <div className=\"form-group row\">\n                    {\n                        errors.position ? \n                        <p className=\"col-sm-8 offset-sm-4 text-danger\">{ errors.position }</p>\n                        :\n                        ''\n                    }\n                    <label htmlFor=\"position\" className=\"col-sm-4\">Crew Position:</label>\n                    <select name=\"position\" value={pirate.position} onChange={handleChange} className=\"col-sm-8 form-control\">\n                        <option value=\"Captian\">Captain</option>\n                        <option value=\"First Mate\">First mate</option>\n                        <option value=\"Quarter Master\">Quarter Master</option>\n                        <option value=\"Boatswain\">Boatswain</option>\n                        <option value=\"Powder Monkey\">Powder Monkey</option>\n                    </select>\n                </div>\n                <div className=\"form-group row\">\n                    <input type=\"submit\" value=\"Add Pirate\"/>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default Form\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link} from '@reach/router'\n\nconst Display = (props) => {\n\n    const [pirate, setPirate] = useState({})\n    const {id} = props\n\n    useEffect(() => {\n        axios.get(`http://localhost:8000/api/pirates/${id}`)\n            .then(response =>{\n                console.log(response)\n                if(response.data.message === \"success\"){\n                    setPirate(response.data.results)\n                }\n            })\n            .catch(err => console.log(err))\n    }, [])\n    return (\n        <div className=\"container\">\n            <header className=\"text-center\">\n                <h1>{pirate.name}</h1>\n                <Link to='/pirates'>Crew board</Link>\n            </header>\n            <div className=\"displayDiv\">\n                <img src={pirate.url} alt={`the url is ${pirate.url}`}/>\n                <h2>{pirate.phrase}</h2>\n            </div>\n            <div className=\"displayDiv text-center\">\n                <h3>About</h3>\n                <p>Position: {pirate.position}</p>\n                <p>Treasures: {pirate.chests}</p>\n                <p>Peg Leg: {pirate.leg ? \"Yes\" : \"No\"}</p>\n                <p>Patch Eye: {pirate.eye ? \"Yes\" : \"No\"}</p>\n                <p>Hook hand: {pirate.hand ? \"Yes\" : \"No\"}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default Display\n","import React from 'react';\nimport './App.css';\nimport Dash from './components/Dash';\nimport {Router} from '@reach/router'\nimport Form from './components/Form';\nimport Display from './components/Display';\n\nfunction App() {\n  return (\n    <div className=\"Container\">\n      <Router>\n        <Dash path=\"/pirates\" default/>\n        <Form path=\"/pirates/new\"/>\n        <Display path=\"/pirate/:id\"/>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}